{"version":3,"sources":["components/Form.js","components/NoteItem.js","components/Alert.js","components/FilterNotes.js","components/NoteList.js","App.js","index.js"],"names":["Form","formData","setFormData","editNote","updating","setUpdating","useState","id","Math","random","date","Date","toISOString","title","note","input","setInput","useEffect","editMode","onChange","e","target","name","value","updatedFormData","filter","data","undefined","className","onSubmit","preventDefault","type","required","placeholder","NoteItem","content","setEditNote","splitDate","split","formattedDate","reverse","join","formattedTime","onClick","textContent","toLowerCase","filterNote","Alert","msg","FilterNotes","setSearchInput","NoteList","searchInput","length","map","App","filterNotes","setFilterNotes","updateFromLocalStorage","updateLocalStorage","searchNotes","localStorage","setItem","JSON","stringify","notes","parse","getItem","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d6d5755.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Form = ({ formData, setFormData, editNote, updating, setUpdating }) => {\r\n\r\n\tconst [input, setInput] = useState({\r\n\t\tid: Math.random(),\r\n\t\tdate: new Date().toISOString(),\r\n\t\ttitle: '',\r\n\t\tnote: '',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\teditMode();\r\n\t}, [editNote]);\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\tid: Math.random(),\r\n\t\t});\r\n\t}\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetFormData([...formData, input]);\r\n\t\tsetInput({\r\n\t\t\ttitle: '',\r\n\t\t\tnote: '',\r\n\t\t});\r\n\t\tsetUpdating(false);\r\n\t}\r\n\r\n\tconst editMode = () => {\r\n\t\tconst note = editNote[0];\r\n\t\t// Remove the edited note so that there are no duplicates\r\n\t\tconst updatedFormData = formData.filter(data => data.id !== note.id);\r\n\t\tif (note !== undefined) {\r\n\t\t\tsetInput({ ...note, });\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFormData(updatedFormData);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='form-container'>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input type=\"text\" name='title' onChange={onChange} value={input.title} required placeholder='Learnt react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Note</label>\r\n\t\t\t\t\t<textarea type=\"text\" name='note' onChange={onChange} value={input.note} required placeholder='Today I have learnt how to create state with react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__btn__container\">\r\n\t\t\t\t\t<button>{updating ? 'Update Note' : 'Add Note'}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst NoteItem = ({ date, title, content, id, formData, setFormData, setEditNote, setUpdating }) => {\r\n\r\n\tconst splitDate = date.split('T');\r\n\tconst formattedDate = splitDate[0].split('-').reverse().join('/');\r\n\tconst formattedTime = splitDate[1].split('.')[0];\r\n\r\n\tconst onClick = (e) => {\r\n\t\tlet action = e.target.textContent.toLowerCase();\r\n\t\tif (action === 'edit') {\r\n\t\t\tlet filterNote = formData.filter(note => note.id === id);\r\n\t\t\tsetEditNote(filterNote);\r\n\t\t\tsetUpdating(true);\r\n\t\t} else {\r\n\t\t\tsetFormData(formData.filter(note => note.id !== id));\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<div className=\"action-container\">\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<p className='content-container'>{content}</p>\r\n\t\t\t<p>\r\n\t\t\t\t<span className='text--notify'>Created on: </span>\r\n\t\t\t\t{formattedDate} <span className='text--notify'>at </span> {formattedTime}\r\n\t\t\t</p>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default NoteItem;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ msg }) => {\r\n\treturn (\r\n\t\t<div className='alert'>\r\n\t\t\t<h2>{msg}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\n\r\nconst FilterNotes = ({ setSearchInput }) => {\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetSearchInput(e.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className='filter-form'>\r\n\t\t\t\t{/* <label>\r\n\t\t\t\t\t<input type=\"radio\" name='filter' value='ascending' />\r\n\t\t\t\t\tAscending\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<input type=\"radio\" name='filter' value='descending' />\r\n\t\t\t\t\tDescending\r\n\t\t\t\t</label> */}\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h3>Search Notes</h3>\r\n\t\t\t\t\t<input type=\"text\" placeholder='My note...' onChange={onChange} />\r\n\t\t\t\t</label>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FilterNotes;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport NoteItem from './NoteItem';\r\nimport Alert from './Alert';\r\nimport FilterNotes from './FilterNotes';\r\n\r\nconst NoteList = ({ formData, setFormData, setEditNote, setUpdating, searchInput, setSearchInput }) => {\r\n\treturn (\r\n\t\t<div className='notelist-container'>\r\n\t\t\t<FilterNotes searchInput={searchInput} setSearchInput={setSearchInput} />\r\n\t\t\t<ul>\r\n\t\t\t\t{!formData.length ?\r\n\t\t\t\t\t<Alert msg='No notes found!' />\r\n\t\t\t\t\t:\r\n\t\t\t\t\tformData.map(data => (\r\n\t\t\t\t\t\t<NoteItem\r\n\t\t\t\t\t\t\tkey={data.id}\r\n\t\t\t\t\t\t\ttitle={data.title}\r\n\t\t\t\t\t\t\tcontent={data.note}\r\n\t\t\t\t\t\t\tdate={data.date}\r\n\t\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t\t\tformData={formData}\r\n\t\t\t\t\t\t\tsetFormData={setFormData}\r\n\t\t\t\t\t\t\tsetEditNote={setEditNote}\r\n\t\t\t\t\t\t\tsetUpdating={setUpdating}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NoteList;","import React, { useState, useEffect } from 'react';\nimport './style/App.css';\n\n// Components\nimport Form from './components/Form';\nimport NoteList from './components/NoteList';\n\nconst App = () => {\n\n\tconst [formData, setFormData] = useState([]);\n\tconst [editNote, setEditNote] = useState({});\n\tconst [updating, setUpdating] = useState(false);\n\tconst [searchInput, setSearchInput] = useState('');\n\tconst [filterNotes, setFilterNotes] = useState([]);\n\n\t// Use effect on render\n\tuseEffect(() => {\n\t\tupdateFromLocalStorage();\n\t}, []);\n\n\t// Use effect when formData changes\n\tuseEffect(() => {\n\t\tupdateLocalStorage();\n\t\tsetFilterNotes(formData);\n\n\t}, [formData]);\n\n\t// Use effect when search input changes\n\tuseEffect(() => {\n\t\tsearchNotes();\n\t}, [searchInput]);\n\n\t// Save to local storage\n\tconst updateLocalStorage = () => {\n\t\tlocalStorage.setItem('notes', JSON.stringify(formData));\n\t}\n\n\t// Update from local storage\n\tconst updateFromLocalStorage = () => {\n\t\tlet notes = JSON.parse(localStorage.getItem('notes'));\n\t\tsetFormData(notes);\n\t}\n\n\t// Search through notes\n\tconst searchNotes = () => {\n\t\tif (searchInput === '') {\n\t\t\tsetFilterNotes(formData);\n\t\t} else {\n\t\t\tsetFilterNotes(filterNotes.filter(note => {\n\t\t\t\treturn note.title.toLowerCase().includes(searchInput.toLowerCase())\n\t\t\t}));\n\t\t\tsetFilterNotes(filterNotes.filter(note => {\n\t\t\t\treturn note.note.toLowerCase().includes(searchInput.toLowerCase())\n\t\t\t}));\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Form formData={formData} setFormData={setFormData} editNote={editNote} updating={updating} setUpdating={setUpdating} />\n\t\t\t<NoteList formData={filterNotes} setFormData={setFormData} setEditNote={setEditNote} setUpdating={setUpdating} searchInput={searchInput} setSearchInput={setSearchInput} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}