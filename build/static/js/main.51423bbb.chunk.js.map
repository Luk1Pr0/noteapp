{"version":3,"sources":["components/Form.js","components/NoteItem.js","components/Alert.js","components/FilterNotes.js","components/NoteList.js","components/DeleteAlert.js","components/Warning.js","App.js","index.js"],"names":["Form","formData","setFormData","editNote","updating","setUpdating","useState","id","Math","random","date","Date","toISOString","title","note","input","setInput","useEffect","editMode","onChange","e","target","name","value","updatedFormData","filter","data","undefined","className","onSubmit","preventDefault","type","required","placeholder","NoteItem","content","setEditNote","setDeleteNote","setWarning","splitDate","split","formattedDate","reverse","join","formattedTime","onClick","action","textContent","toLowerCase","setTimeout","window","scrollTo","filterNote","Alert","msg","FilterNotes","setSearchInput","NoteList","searchInput","length","map","DeleteAlert","deleteNote","confirm","Warning","App","notesArray","setNotesArray","warning","updateFromLocalStorage","updateLocalStorage","searchNotes","localStorage","setItem","JSON","stringify","getItem","notes","parse","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51423bbb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Form = ({ formData, setFormData, editNote, updating, setUpdating }) => {\r\n\r\n\tconst [input, setInput] = useState({\r\n\t\tid: Math.random(),\r\n\t\tdate: new Date().toISOString(),\r\n\t\ttitle: '',\r\n\t\tnote: '',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\teditMode();\r\n\t}, [editNote]);\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\tid: Math.random(),\r\n\t\t});\r\n\t}\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetFormData([...formData, input]);\r\n\t\tsetInput({\r\n\t\t\ttitle: '',\r\n\t\t\tnote: '',\r\n\t\t});\r\n\t\tsetUpdating(false);\r\n\t}\r\n\r\n\tconst editMode = () => {\r\n\t\tconst note = editNote[0];\r\n\t\t// Remove the edited note so that there are no duplicates\r\n\t\tconst updatedFormData = formData.filter(data => data.id !== note.id);\r\n\t\tif (note !== undefined) {\r\n\t\t\tsetInput({ ...note });\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFormData(updatedFormData);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='form-container'>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input type=\"text\" name='title' onChange={onChange} value={input.title} required placeholder='Learnt react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Note</label>\r\n\t\t\t\t\t<textarea type=\"text\" name='note' onChange={onChange} value={input.note} required placeholder='Today I have learnt how to create state with react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__btn__container\">\r\n\t\t\t\t\t<button type='submit'>{updating ? 'Update Note' : 'Add Note'}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst NoteItem = ({ date, title, content, id, formData, setEditNote, updating, setUpdating, setDeleteNote, setWarning }) => {\r\n\r\n\tconst splitDate = date.split('T');\r\n\tconst formattedDate = splitDate[0].split('-').reverse().join('/');\r\n\tconst formattedTime = splitDate[1].split('.')[0];\r\n\r\n\tconst onClick = (e) => {\r\n\t\tlet action = e.target.textContent.toLowerCase();\r\n\t\tif (action === 'edit' && !updating) {\r\n\t\t\tlet filterNote = formData.filter(note => note.id === id);\r\n\t\t\tsetEditNote(filterNote);\r\n\t\t\tsetUpdating(true);\r\n\t\t\twindow.scrollTo(0, 0,);\r\n\t\t} else if (action === 'edit' && updating) {\r\n\t\t\tsetWarning(true);\r\n\t\t\tsetTimeout(() => setWarning(false), 3000);\r\n\t\t\twindow.scrollTo(0, 0,);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDeleteNote({ id });\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<div className=\"action-container\">\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<p className='content-container'>{content}</p>\r\n\t\t\t<p>\r\n\t\t\t\t<span className='text--notify'>Created on: </span>\r\n\t\t\t\t{formattedDate} <span className='text--notify'>at </span> {formattedTime}\r\n\t\t\t</p>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default NoteItem;","import React from 'react';\r\n\r\nconst Alert = ({ msg }) => {\r\n\treturn (\r\n\t\t<div className='alert'>\r\n\t\t\t<h2>{msg}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\n\r\nconst FilterNotes = ({ setSearchInput }) => {\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetSearchInput(e.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className='filter-form'>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h3>Search Notes</h3>\r\n\t\t\t\t\t<input type=\"text\" placeholder='My note...' onChange={onChange} />\r\n\t\t\t\t</label>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FilterNotes;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport NoteItem from './NoteItem';\r\nimport Alert from './Alert';\r\nimport FilterNotes from './FilterNotes';\r\n\r\nconst NoteList = ({ formData, setFormData, setEditNote, updating, setUpdating, searchInput, setSearchInput, setDeleteNote, setWarning }) => {\r\n\treturn (\r\n\t\t<div className='notelist-container'>\r\n\t\t\t<FilterNotes searchInput={searchInput} setSearchInput={setSearchInput} />\r\n\t\t\t<ul>\r\n\t\t\t\t{!formData.length ?\r\n\t\t\t\t\t<Alert msg='No notes found!' />\r\n\t\t\t\t\t:\r\n\t\t\t\t\tformData.map(data => (\r\n\t\t\t\t\t\t<NoteItem\r\n\t\t\t\t\t\t\tkey={data.id}\r\n\t\t\t\t\t\t\ttitle={data.title}\r\n\t\t\t\t\t\t\tcontent={data.note}\r\n\t\t\t\t\t\t\tdate={data.date}\r\n\t\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t\t\tformData={formData}\r\n\t\t\t\t\t\t\tsetFormData={setFormData}\r\n\t\t\t\t\t\t\tsetEditNote={setEditNote}\r\n\t\t\t\t\t\t\tupdating={updating}\r\n\t\t\t\t\t\t\tsetUpdating={setUpdating}\r\n\t\t\t\t\t\t\tsetDeleteNote={setDeleteNote}\r\n\t\t\t\t\t\t\tsetWarning={setWarning}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NoteList;","import React from 'react';\r\n\r\nconst DeleteAlert = ({ deleteNote, setDeleteNote, formData, setFormData }) => {\r\n\r\n\tconst onClick = (confirm) => {\r\n\t\tif (confirm === 'delete') {\r\n\t\t\tsetFormData(formData.filter(note => note.id !== deleteNote.id));\r\n\t\t}\r\n\t\tsetDeleteNote(null);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='delete-alert'>\r\n\t\t\t<h1>Are you sure you want to delete this note?</h1>\r\n\t\t\t<div className=\"btn-container\">\r\n\t\t\t\t<button className='btn--red' onClick={() => onClick('delete')}>Yes, delete</button>\r\n\t\t\t\t<button className='btn--green' onClick={() => onClick('cancel')}>No, don't delete</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DeleteAlert;\r\n","import React from 'react';\r\n\r\nconst Warning = ({ msg }) => {\r\n\treturn (\r\n\t\t<div className='warning-container'>\r\n\t\t\t<h2>{msg}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Warning\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style/App.css';\r\n\r\n// Components\r\nimport Form from './components/Form';\r\nimport NoteList from './components/NoteList';\r\nimport DeleteAlert from './components/DeleteAlert';\r\nimport Warning from './components/Warning';\r\n\r\nconst App = () => {\r\n\r\n\t// State\r\n\tconst [formData, setFormData] = useState([]);\r\n\tconst [notesArray, setNotesArray] = useState([]);\r\n\tconst [editNote, setEditNote] = useState({});\r\n\tconst [deleteNote, setDeleteNote] = useState(null);\r\n\tconst [updating, setUpdating] = useState(false);\r\n\tconst [searchInput, setSearchInput] = useState('');\r\n\tconst [warning, setWarning] = useState(false);\r\n\r\n\t// Use effect on render\r\n\tuseEffect(() => {\r\n\t\tupdateFromLocalStorage();\r\n\t}, []);\r\n\r\n\t// Use effect when formData changes\r\n\tuseEffect(() => {\r\n\t\tupdateLocalStorage();\r\n\t}, [formData]);\r\n\r\n\t// Use effect when search input changes\r\n\tuseEffect(() => {\r\n\t\tsearchNotes();\r\n\t}, [searchInput]);\r\n\r\n\t// Save to local storage\r\n\tconst updateLocalStorage = () => {\r\n\t\tlocalStorage.setItem('notes', JSON.stringify(formData));\r\n\t}\r\n\r\n\t// Update from local storage\r\n\tconst updateFromLocalStorage = () => {\r\n\t\tif (localStorage.getItem('notes') === null) {\r\n\t\t\tlocalStorage.setItem('notes', JSON.stringify([]));\r\n\t\t} else {\r\n\t\t\tlet notes = JSON.parse(localStorage.getItem('notes'));\r\n\t\t\tsetFormData(notes);\r\n\t\t\tsetNotesArray(notes);\r\n\t\t}\r\n\t}\r\n\r\n\t// Search through notes based on input\r\n\tconst searchNotes = () => {\r\n\t\tsetNotesArray(formData.filter(note => {\r\n\t\t\tif (note.title.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\t\t\t\treturn note;\r\n\t\t\t} else if (note.note.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\t\t\t\treturn note;\r\n\t\t\t}\r\n\t\t}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{deleteNote !== null ? <DeleteAlert deleteNote={deleteNote} setDeleteNote={setDeleteNote} formData={formData} setFormData={setFormData} /> : null}\r\n\t\t\t{warning ? <Warning msg='Another note is already being edited, please save it first!' /> : null}\r\n\t\t\t<Form formData={formData} setFormData={setFormData} editNote={editNote} updating={updating} setUpdating={setUpdating} />\r\n\t\t\t<NoteList formData={searchInput === '' ? formData : notesArray} setFormData={setFormData} setEditNote={setEditNote} updating={updating} setUpdating={setUpdating} searchInput={searchInput} setSearchInput={setSearchInput} setDeleteNote={setDeleteNote} setWarning={setWarning} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}