{"version":3,"sources":["components/Form.js","components/NoteItem.js","components/Alert.js","components/FilterNotes.js","components/NoteList.js","components/DeleteAlert.js","components/Warning.js","App.js","index.js"],"names":["Form","formData","setFormData","editNote","updating","setUpdating","useState","id","Math","random","date","Date","toISOString","title","note","input","setInput","useEffect","editMode","warnBeforeRefresh","onChange","e","target","name","value","updatedFormData","filter","data","undefined","length","window","addEventListener","preventDefault","returnValue","className","onSubmit","type","required","placeholder","NoteItem","content","setEditNote","setDeleteNote","setWarning","splitDate","split","formattedDate","reverse","join","formattedTime","onClick","action","textContent","toLowerCase","setTimeout","scrollTo","filterNote","Alert","msg","FilterNotes","setSearchInput","NoteList","searchInput","map","DeleteAlert","deleteNote","confirm","Warning","App","notesArray","setNotesArray","warning","updateFromLocalStorage","updateLocalStorage","searchNotes","localStorage","setItem","JSON","stringify","getItem","notes","parse","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.646cd609.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Form = ({ formData, setFormData, editNote, updating, setUpdating }) => {\r\n\r\n\tconst [input, setInput] = useState({\r\n\t\tid: Math.random(),\r\n\t\tdate: new Date().toISOString(),\r\n\t\ttitle: '',\r\n\t\tnote: '',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\teditMode();\r\n\t}, [editNote]);\r\n\r\n\tuseEffect(() => {\r\n\t\twarnBeforeRefresh();\r\n\t}, [input]);\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\tid: Math.random(),\r\n\t\t});\r\n\t}\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetFormData([...formData, input]);\r\n\t\tsetInput({\r\n\t\t\ttitle: '',\r\n\t\t\tnote: '',\r\n\t\t});\r\n\t\tsetUpdating(false);\r\n\t}\r\n\r\n\tconst editMode = () => {\r\n\t\tconst note = editNote[0];\r\n\t\t// Remove the edited note so that there are no duplicates\r\n\t\tconst updatedFormData = formData.filter(data => data.id !== note.id);\r\n\t\tif (note !== undefined) {\r\n\t\t\tsetInput({ ...note });\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFormData(updatedFormData);\r\n\t}\r\n\r\n\tconst warnBeforeRefresh = () => {\r\n\t\tif (!input.title.length || !input.note.length) {\r\n\t\t\twindow.addEventListener('beforeunload', (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.returnValue = '';\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='form-container'>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input type=\"text\" name='title' onChange={onChange} value={input.title} required placeholder='Learnt react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Note</label>\r\n\t\t\t\t\t<textarea type=\"text\" name='note' onChange={onChange} value={input.note} required placeholder='Today I have learnt how to create state with react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__btn__container\">\r\n\t\t\t\t\t<button type='submit'>{updating ? 'Update Note' : 'Add Note'}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst NoteItem = ({ date, title, content, id, formData, setEditNote, updating, setUpdating, setDeleteNote, setWarning }) => {\r\n\r\n\tconst splitDate = date.split('T');\r\n\tconst formattedDate = splitDate[0].split('-').reverse().join('/');\r\n\tconst formattedTime = splitDate[1].split('.')[0];\r\n\r\n\tconst onClick = (e) => {\r\n\t\tlet action = e.target.textContent.toLowerCase();\r\n\t\tif (action === 'edit' && !updating) {\r\n\t\t\tlet filterNote = formData.filter(note => note.id === id);\r\n\t\t\tsetEditNote(filterNote);\r\n\t\t\tsetUpdating(true);\r\n\t\t\twindow.scrollTo(0, 0,);\r\n\t\t} else if (action === 'edit' && updating) {\r\n\t\t\tsetWarning(true);\r\n\t\t\tsetTimeout(() => setWarning(false), 3000);\r\n\t\t\twindow.scrollTo(0, 0,);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDeleteNote({ id });\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<div className=\"action-container\">\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<p className='content-container'>{content}</p>\r\n\t\t\t<p>\r\n\t\t\t\t<span className='text--notify'>Created on: </span>\r\n\t\t\t\t{formattedDate} <span className='text--notify'>at </span> {formattedTime}\r\n\t\t\t</p>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default NoteItem;","import React from 'react';\r\n\r\nconst Alert = ({ msg }) => {\r\n\treturn (\r\n\t\t<div className='alert'>\r\n\t\t\t<h2>{msg}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\n\r\nconst FilterNotes = ({ setSearchInput }) => {\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetSearchInput(e.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className='filter-form'>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h3>Search Notes</h3>\r\n\t\t\t\t\t<input type=\"text\" placeholder='My note...' onChange={onChange} />\r\n\t\t\t\t</label>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FilterNotes;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport NoteItem from './NoteItem';\r\nimport Alert from './Alert';\r\nimport FilterNotes from './FilterNotes';\r\n\r\nconst NoteList = ({ formData, setFormData, setEditNote, updating, setUpdating, searchInput, setSearchInput, setDeleteNote, setWarning }) => {\r\n\treturn (\r\n\t\t<div className='notelist-container'>\r\n\t\t\t<FilterNotes searchInput={searchInput} setSearchInput={setSearchInput} />\r\n\t\t\t<ul>\r\n\t\t\t\t{!formData.length ?\r\n\t\t\t\t\t<Alert msg='No notes found!' />\r\n\t\t\t\t\t:\r\n\t\t\t\t\tformData.map(data => (\r\n\t\t\t\t\t\t<NoteItem\r\n\t\t\t\t\t\t\tkey={data.id}\r\n\t\t\t\t\t\t\ttitle={data.title}\r\n\t\t\t\t\t\t\tcontent={data.note}\r\n\t\t\t\t\t\t\tdate={data.date}\r\n\t\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t\t\tformData={formData}\r\n\t\t\t\t\t\t\tsetFormData={setFormData}\r\n\t\t\t\t\t\t\tsetEditNote={setEditNote}\r\n\t\t\t\t\t\t\tupdating={updating}\r\n\t\t\t\t\t\t\tsetUpdating={setUpdating}\r\n\t\t\t\t\t\t\tsetDeleteNote={setDeleteNote}\r\n\t\t\t\t\t\t\tsetWarning={setWarning}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NoteList;","import React from 'react';\r\n\r\nconst DeleteAlert = ({ deleteNote, setDeleteNote, formData, setFormData }) => {\r\n\r\n\tconst onClick = (confirm) => {\r\n\t\tif (confirm === 'delete') {\r\n\t\t\tsetFormData(formData.filter(note => note.id !== deleteNote.id));\r\n\t\t}\r\n\t\tsetDeleteNote(null);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='delete-alert'>\r\n\t\t\t<h1>Are you sure you want to delete this note?</h1>\r\n\t\t\t<div className=\"btn-container\">\r\n\t\t\t\t<button className='btn--red' onClick={() => onClick('delete')}>Yes, delete</button>\r\n\t\t\t\t<button className='btn--green' onClick={() => onClick('cancel')}>No, don't delete</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DeleteAlert;\r\n","import React from 'react';\r\n\r\nconst Warning = ({ msg }) => {\r\n\treturn (\r\n\t\t<div className='warning-container'>\r\n\t\t\t<h2>{msg}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Warning\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style/App.css';\r\n\r\n// Components\r\nimport Form from './components/Form';\r\nimport NoteList from './components/NoteList';\r\nimport DeleteAlert from './components/DeleteAlert';\r\nimport Warning from './components/Warning';\r\n\r\nconst App = () => {\r\n\r\n\t// State\r\n\tconst [formData, setFormData] = useState([]);\r\n\tconst [notesArray, setNotesArray] = useState([]);\r\n\tconst [editNote, setEditNote] = useState({});\r\n\tconst [deleteNote, setDeleteNote] = useState(null);\r\n\tconst [updating, setUpdating] = useState(false);\r\n\tconst [searchInput, setSearchInput] = useState('');\r\n\tconst [warning, setWarning] = useState(false);\r\n\r\n\t// Use effect on render\r\n\tuseEffect(() => {\r\n\t\tupdateFromLocalStorage();\r\n\t}, []);\r\n\r\n\t// Use effect when formData changes\r\n\tuseEffect(() => {\r\n\t\tupdateLocalStorage();\r\n\t}, [formData]);\r\n\r\n\t// Use effect when search input changes\r\n\tuseEffect(() => {\r\n\t\tsearchNotes();\r\n\t}, [searchInput]);\r\n\r\n\t// Save to local storage\r\n\tconst updateLocalStorage = () => {\r\n\t\tlocalStorage.setItem('notes', JSON.stringify(formData));\r\n\t}\r\n\r\n\t// Update from local storage\r\n\tconst updateFromLocalStorage = () => {\r\n\t\tif (localStorage.getItem('notes') === null) {\r\n\t\t\tlocalStorage.setItem('notes', JSON.stringify([]));\r\n\t\t} else {\r\n\t\t\tlet notes = JSON.parse(localStorage.getItem('notes'));\r\n\t\t\tsetFormData(notes);\r\n\t\t\tsetNotesArray(notes);\r\n\t\t}\r\n\t}\r\n\r\n\t// Search through notes based on input\r\n\tconst searchNotes = () => {\r\n\t\tsetNotesArray(formData.filter(note => {\r\n\t\t\tif (note.title.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\t\t\t\treturn note;\r\n\t\t\t} else if (note.note.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\t\t\t\treturn note;\r\n\t\t\t}\r\n\t\t}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{deleteNote !== null ? <DeleteAlert deleteNote={deleteNote} setDeleteNote={setDeleteNote} formData={formData} setFormData={setFormData} /> : null}\r\n\t\t\t{warning ? <Warning msg='Another note is already being edited, please save it first!' /> : null}\r\n\t\t\t<Form formData={formData} setFormData={setFormData} editNote={editNote} updating={updating} setUpdating={setUpdating} />\r\n\t\t\t<NoteList formData={searchInput === '' ? formData : notesArray} setFormData={setFormData} setEditNote={setEditNote} updating={updating} setUpdating={setUpdating} searchInput={searchInput} setSearchInput={setSearchInput} setDeleteNote={setDeleteNote} setWarning={setWarning} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}