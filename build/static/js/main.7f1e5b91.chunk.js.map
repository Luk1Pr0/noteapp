{"version":3,"sources":["components/Form.js","components/NoteItem.js","components/Alert.js","components/FilterNotes.js","components/NoteList.js","components/DeleteAlert.js","App.js","index.js"],"names":["Form","formData","setFormData","editNote","updating","setUpdating","useState","id","Math","random","date","Date","toISOString","title","note","input","setInput","useEffect","editMode","onChange","e","target","name","value","updatedFormData","filter","data","undefined","className","onSubmit","preventDefault","type","required","placeholder","NoteItem","content","setEditNote","setDeleteNote","splitDate","split","formattedDate","reverse","join","formattedTime","onClick","textContent","toLowerCase","filterNote","Alert","msg","FilterNotes","setSearchInput","NoteList","searchInput","length","map","DeleteAlert","deleteNote","confirm","App","notesArray","setNotesArray","updateFromLocalStorage","updateLocalStorage","searchNotes","localStorage","setItem","JSON","stringify","getItem","notes","parse","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f1e5b91.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Form = ({ formData, setFormData, editNote, updating, setUpdating }) => {\r\n\r\n\tconst [input, setInput] = useState({\r\n\t\tid: Math.random(),\r\n\t\tdate: new Date().toISOString(),\r\n\t\ttitle: '',\r\n\t\tnote: '',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\teditMode();\r\n\t}, [editNote]);\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\tid: Math.random(),\r\n\t\t});\r\n\t}\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetFormData([...formData, input]);\r\n\t\tsetInput({\r\n\t\t\ttitle: '',\r\n\t\t\tnote: '',\r\n\t\t});\r\n\t\tsetUpdating(false);\r\n\t}\r\n\r\n\tconst editMode = () => {\r\n\t\tconst note = editNote[0];\r\n\t\t// Remove the edited note so that there are no duplicates\r\n\t\tconst updatedFormData = formData.filter(data => data.id !== note.id);\r\n\t\tif (note !== undefined) {\r\n\t\t\tsetInput({ ...note });\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetFormData(updatedFormData);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='form-container'>\r\n\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input type=\"text\" name='title' onChange={onChange} value={input.title} required placeholder='Learnt react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t<label>Note</label>\r\n\t\t\t\t\t<textarea type=\"text\" name='note' onChange={onChange} value={input.note} required placeholder='Today I have learnt how to create state with react hooks...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__btn__container\">\r\n\t\t\t\t\t<button>{updating ? 'Update Note' : 'Add Note'}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst NoteItem = ({ date, title, content, id, formData, setFormData, setEditNote, setUpdating, setDeleteNote }) => {\r\n\r\n\tconst splitDate = date.split('T');\r\n\tconst formattedDate = splitDate[0].split('-').reverse().join('/');\r\n\tconst formattedTime = splitDate[1].split('.')[0];\r\n\r\n\tconst onClick = (e) => {\r\n\t\tlet action = e.target.textContent.toLowerCase();\r\n\t\tif (action === 'edit') {\r\n\t\t\tlet filterNote = formData.filter(note => note.id === id);\r\n\t\t\tsetEditNote(filterNote);\r\n\t\t\tsetUpdating(true);\r\n\t\t} else {\r\n\t\t\tsetDeleteNote({ id });\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<div className=\"action-container\">\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"button__container\">\r\n\t\t\t\t\t<button onClick={onClick}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<p className='content-container'>{content}</p>\r\n\t\t\t<p>\r\n\t\t\t\t<span className='text--notify'>Created on: </span>\r\n\t\t\t\t{formattedDate} <span className='text--notify'>at </span> {formattedTime}\r\n\t\t\t</p>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default NoteItem;","import React from 'react';\r\n\r\nconst Alert = ({ msg }) => {\r\n\treturn (\r\n\t\t<div className='alert'>\r\n\t\t\t<h2>{msg}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\n\r\nconst FilterNotes = ({ setSearchInput }) => {\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetSearchInput(e.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className='filter-form'>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h3>Search Notes</h3>\r\n\t\t\t\t\t<input type=\"text\" placeholder='My note...' onChange={onChange} />\r\n\t\t\t\t</label>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FilterNotes;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport NoteItem from './NoteItem';\r\nimport Alert from './Alert';\r\nimport FilterNotes from './FilterNotes';\r\n\r\nconst NoteList = ({ formData, setFormData, setEditNote, setUpdating, searchInput, setSearchInput, setDeleteNote }) => {\r\n\treturn (\r\n\t\t<div className='notelist-container'>\r\n\t\t\t<FilterNotes searchInput={searchInput} setSearchInput={setSearchInput} />\r\n\t\t\t<ul>\r\n\t\t\t\t{!formData.length ?\r\n\t\t\t\t\t<Alert msg='No notes found!' />\r\n\t\t\t\t\t:\r\n\t\t\t\t\tformData.map(data => (\r\n\t\t\t\t\t\t<NoteItem\r\n\t\t\t\t\t\t\tkey={data.id}\r\n\t\t\t\t\t\t\ttitle={data.title}\r\n\t\t\t\t\t\t\tcontent={data.note}\r\n\t\t\t\t\t\t\tdate={data.date}\r\n\t\t\t\t\t\t\tid={data.id}\r\n\t\t\t\t\t\t\tformData={formData}\r\n\t\t\t\t\t\t\tsetFormData={setFormData}\r\n\t\t\t\t\t\t\tsetEditNote={setEditNote}\r\n\t\t\t\t\t\t\tsetUpdating={setUpdating}\r\n\t\t\t\t\t\t\tsetDeleteNote={setDeleteNote}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NoteList;","import React from 'react';\r\n\r\nconst DeleteAlert = ({ deleteNote, setDeleteNote, formData, setFormData }) => {\r\n\r\n\tconst onClick = (confirm) => {\r\n\t\tif (confirm === 'delete') {\r\n\t\t\tsetFormData(formData.filter(note => note.id !== deleteNote.id));\r\n\t\t}\r\n\t\tsetDeleteNote(null);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='delete-alert'>\r\n\t\t\t<h1>Are you sure you want to delete this note?</h1>\r\n\t\t\t<div className=\"btn-container\">\r\n\t\t\t\t<button className='btn--red' onClick={() => onClick('delete')}>Yes, delete</button>\r\n\t\t\t\t<button className='btn--green' onClick={() => onClick('cancel')}>No, don't delete</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DeleteAlert;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style/App.css';\r\n\r\n// Components\r\nimport Form from './components/Form';\r\nimport NoteList from './components/NoteList';\r\nimport DeleteAlert from './components/DeleteAlert';\r\n\r\nconst App = () => {\r\n\r\n\t// State\r\n\tconst [formData, setFormData] = useState([]);\r\n\tconst [notesArray, setNotesArray] = useState([]);\r\n\tconst [editNote, setEditNote] = useState({});\r\n\tconst [deleteNote, setDeleteNote] = useState(null);\r\n\tconst [updating, setUpdating] = useState(false);\r\n\tconst [searchInput, setSearchInput] = useState('');\r\n\r\n\t// Use effect on render\r\n\tuseEffect(() => {\r\n\t\tupdateFromLocalStorage();\r\n\t}, []);\r\n\r\n\t// Use effect when formData changes\r\n\tuseEffect(() => {\r\n\t\tupdateLocalStorage();\r\n\t}, [formData]);\r\n\r\n\t// Use effect when search input changes\r\n\tuseEffect(() => {\r\n\t\tsearchNotes();\r\n\t}, [searchInput]);\r\n\r\n\t// Save to local storage\r\n\tconst updateLocalStorage = () => {\r\n\t\tlocalStorage.setItem('notes', JSON.stringify(formData));\r\n\t}\r\n\r\n\t// Update from local storage\r\n\tconst updateFromLocalStorage = () => {\r\n\t\tif (localStorage.getItem('notes') === null) {\r\n\t\t\tlocalStorage.setItem('notes', JSON.stringify([]));\r\n\t\t} else {\r\n\t\t\tlet notes = JSON.parse(localStorage.getItem('notes'));\r\n\t\t\tsetFormData(notes);\r\n\t\t\tsetNotesArray(notes);\r\n\t\t}\r\n\t}\r\n\r\n\t// Search through notes based on input\r\n\tconst searchNotes = () => {\r\n\t\tsetNotesArray(formData.filter(note => {\r\n\t\t\tif (note.title.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\t\t\t\treturn note;\r\n\t\t\t} else if (note.note.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\t\t\t\treturn note;\r\n\t\t\t}\r\n\t\t}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{deleteNote !== null ? <DeleteAlert deleteNote={deleteNote} setDeleteNote={setDeleteNote} formData={formData} setFormData={setFormData} /> : null}\r\n\t\t\t<Form formData={formData} setFormData={setFormData} editNote={editNote} updating={updating} setUpdating={setUpdating} />\r\n\t\t\t<NoteList formData={searchInput === '' ? formData : notesArray} setFormData={setFormData} setEditNote={setEditNote} setUpdating={setUpdating} searchInput={searchInput} setSearchInput={setSearchInput} setDeleteNote={setDeleteNote} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}